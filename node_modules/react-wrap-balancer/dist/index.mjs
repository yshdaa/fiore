"use client"
import a from"react";import p from"react";var E=typeof window=="undefined",m=E?p.useEffect:p.useLayoutEffect,B=0,_=()=>++B,v=!1;function O(){let[n,r]=p.useState(v?_:void 0);return m(()=>{n===void 0&&r(_()),v=!0},[]),n===void 0?n:`rwb-${n.toString(32)}`}function R(){return p.useMemo(()=>"useId"in p?p.useId:O,[])()}var y="__wrap_b",f="__wrap_n",S="__wrap_o",T=(n,r,e)=>{e=e||document.querySelector(`[data-br="${n}"]`);let t=e==null?void 0:e.parentElement;if(!t)return;let l=u=>e.style.maxWidth=u+"px";e.style.maxWidth="";let i=t.clientWidth,d=t.clientHeight,o=i/2-.25,s=i+.5,c;if(i){for(l(o),o=Math.max(e.scrollWidth,o);o+1<s;)c=Math.round((o+s)/2),l(c),t.clientHeight===d?s=c:o=c;l(s*r+i*(1-r))}e.__wrap_o||(typeof ResizeObserver!="undefined"?(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(t):process.env.NODE_ENV==="development"&&console.warn("The browser you are using does not support the ResizeObserver API. Please consider add polyfill for this API to avoid potential layout shifts or upgrade your browser. Read more: https://github.com/shuding/react-wrap-balancer#browser-support-information"))},I=T.toString(),w='(self.CSS&&CSS.supports("text-wrap","balance")?1:2)',g=(n,r,e="")=>(e&&(e=`self.${f}!=1&&${e}`),a.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(n?"":`self.${f}=self.${f}||${w};self.${y}=${I};`)+e},nonce:r})),h=a.createContext({preferNative:!0,hasProvider:!1}),Y=({preferNative:n=!0,nonce:r,children:e})=>{let t=a.useMemo(()=>({preferNative:n,hasProvider:!0}),[n]);return a.createElement(h.Provider,{value:t},g(!1,r),e)},P=a.forwardRef(({ratio:n=1,preferNative:r,nonce:e,children:t,as:l,...i},d)=>{let o=R(),s=a.useRef(),c=a.useContext(h),u=r!=null?r:c.preferNative,x=l||"span";return a.useImperativeHandle(d,()=>s.current,[]),m(()=>{u&&self[f]===1||s.current&&(self[y]=T)(0,n,s.current)},[t,u,n]),m(()=>{if(!(u&&self[f]===1))return()=>{if(!s.current)return;let b=s.current[S];b&&(b.disconnect(),delete s.current[S])}},[u]),process.env.NODE_ENV==="development"&&t&&!Array.isArray(t)&&typeof t=="object"&&"type"in t&&typeof t.type=="string"&&t.type!=="span"&&console.warn(`<Balancer> should not wrap <${t.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${t.type}>content</${t.type}></Balancer>
To:
  <${t.type}><Balancer>content</Balancer></${t.type}>`),a.createElement(a.Fragment,null,a.createElement(x,{...i,"data-br":o,"data-brr":n,ref:s,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit",textWrap:u?"balance":"initial"},suppressHydrationWarning:!0},t),g(c.hasProvider,e,`self.${y}("${o}",${n})`))});if(!E&&process.env.NODE_ENV!=="production"){let n=document.querySelector("[data-next-hide-fouc]");if(n){let r=t=>{for(let l of t)for(let i of Array.from(l.removedNodes)){if(i!==n)continue;e.disconnect();let d=document.querySelectorAll("[data-br]");for(let o of Array.from(d))self[y](0,+o.dataset.brr,o)}},e=new MutationObserver(r);e.observe(document.head,{childList:!0})}}var A=P;export{P as Balancer,Y as Provider,A as default};
//# sourceMappingURL=index.mjs.map